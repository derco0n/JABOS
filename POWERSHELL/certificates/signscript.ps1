#Dieses Skript signiert ein anderes Powershellskript
#Ein gültiges Codesigningzertifikat ist erforderlich.
#März 2016, D. Marx

param(
	[String]$Filename,
	[int]$certid=0
	)

if ($Filename -eq $null){
write-host "Aufruf: .\signscript -Filename Laufwerk:\Pfad\zum\Script.ps1"
 exit 1
}
else
{
try {
	$certs=[System.Collections.ArrayList]::new()
	$null=$certs.addrange((Get-ChildItem cert:\CurrentUser\My -CodeSigningCert))
	Set-AuthenticodeSignature -Certificate $certs[$certid] -FilePath $Filename
	Write-Host "$Filename wurde signiert."
	exit 0
	}
catch {
	Write-Host "Es ist ein Fehler aufgetreten."
	exit 2
	}
}


# SIG # Begin signature block
# MIIMSwYJKoZIhvcNAQcCoIIMPDCCDDgCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUcN1zDsVJLkLOq74BTPPKU5yG
# g9GgggnrMIID4DCCA2agAwIBAgICEAEwCgYIKoZIzj0EAwMwgZwxCzAJBgNVBAYT
# AkRFMQwwCgYDVQQIDANOUlcxEDAOBgNVBAcMB0RldG1vbGQxHDAaBgNVBAoME0ts
# aW5pa3VtIExpcHBlIEdtYkgxCzAJBgNVBAsMAklUMRIwEAYDVQQDDAlLTEdST09U
# Q0ExLjAsBgkqhkiG9w0BCQEWH2l0LXNpY2hlcmhlaXRAa2xpbmlrdW0tbGlwcGUu
# ZGUwHhcNMjIwNjIxMDkxNDQxWhcNMzIwNDI5MDkxNDQxWjASMRAwDgYDVQQDEwdT
# VUJDQTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyNK313/s36Nq
# xX8Q6WQhHlrMiS0j1M/ZCjqTcKkS6fh1tVrL29qiGbSC86oCh1hvn185sWf386N8
# Jc4RTlvYDjtvMyoIS+mjBUJaKTcD+k93h3Gue+IS3nOswM4nH1CLyIzDbBXGlkv3
# bDeYKh0UZUD8rO3vXSu/2vik7NaUD75wC+msH92XnmkyzgAe3d3T4T9jxfJrDjXa
# ILSMBqA+qgstR4w2jnVyL95ABurgxuP2OHN8GOq6oaXXTt8OKIsEclqsBmEQilh+
# pLkY7ucDz24d/K2rTK0yLv0r1nWDZcoEOp127A7e7Y2GjOdNchbhAIrNsu7NjhI0
# iAtZ0etJ2QIDAQABo4IBVDCCAVAwHQYDVR0OBBYEFE324n38zJ7eb4FTuqbdGLAZ
# gINgMB8GA1UdIwQYMBaAFAa5rvju/tkF/RkhBtJLnHPUZjGPMBIGA1UdEwEB/wQI
# MAYBAf8CAQAwDgYDVR0PAQH/BAQDAgGGMEkGA1UdHwRCMEAwPqA8oDqGOGh0dHA6
# Ly9rbGdyb290Y3JsLmtsaW5pa3VtLmxpcHBlLmludHJhL0tMRy9LTEdST09UQ0Eu
# Q1JMMIGeBggrBgEFBQcBAQSBkTCBjjBTBggrBgEFBQcwAoZHaHR0cDovL2tsZ3Jv
# b3Rjcmwua2xpbmlrdW0ubGlwcGUuaW50cmEvS0xHL2tsaW5pa3VtLmxpcHBlLmlu
# dHJhLmNydC5wZW0wNwYIKwYBBQUHMAGGK2h0dHA6Ly9rbGdyb290Y3JsLmtsaW5p
# a3VtLmxpcHBlLmludHJhL0tMRy8wCgYIKoZIzj0EAwMDaAAwZQIxANTjc6Pduoyg
# R/12JF18i5wLqJQSVa4A3tsG7IUDfCm3aW2uY1OxDnCEbNDoSHCnvwIwY691E+ti
# BKwJIATHDZ4d6odgZFblv2nM73o4uaW/pAz13M4JcEIf6hbp6Cd6CNGiMIIGAzCC
# BOugAwIBAgITEQAABKYCgfvNVcfXWgAAAAAEpjANBgkqhkiG9w0BAQwFADASMRAw
# DgYDVQQDEwdTVUJDQTAxMB4XDTIyMDYyNzA1NDAyOVoXDTIzMDYyNzA1NDAyOVow
# gZMxFTATBgoJkiaJk/IsZAEZFgVpbnRyYTEVMBMGCgmSJomT8ixkARkWBWxpcHBl
# MRgwFgYKCZImiZPyLGQBGRYIa2xpbmlrdW0xHDAaBgNVBAsTE0luZm9ybWF0aW9u
# c3RlY2huaWsxDTALBgNVBAsTBFVzZXIxHDAaBgNVBAMME01haWVuaMO2ZmVyLCBE
# ZW5uaXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCfVJc9uC9cZ49n
# +cXJH1VxYWNpiHQVSpdj6yyHq+Ngsk87NSt6HvnbjUbgh7P7nueUzookirXRfeWX
# JDr6k1LaPXDNhLy/JCqrJxFGYJSU/OJjzBf0Clsf4/ba8PP36OeawrWOuCQBTIHU
# hi8po6hSifqpvUu3Bdr2nVuYztQDBUZQgU5XD+TjMKN0UfTDtPi/loyUpe9fe1zd
# 1XclKijJRsiteKVqmbOMy5bg7rWUlcQmFplE1j6MQ/K6k7dJd6yfGeHq0UAK6mJGi
# /zWYVO8RL/3xyMol1DQdPJnlHhyEpbZzl4JtQiGLevo8CgEKQ6m+lggy7eO4coqF
# LA02jmddAgMBAAGjggLOMIICyjA9BgkrBgEEAYI3FQcEMDAuBiYrBgEEAYI3FQiF
# 6sVXgYCmJYXZkyCH7fBwkpg1gQqG3I9lgaTebwIBZAIBBzATBgNVHSUEDDAKBggr
# BgEFBQcDAzAOBgNVHQ8BAf8EBAMCB4AwGwYJKwYBBAGCNxUKBA4wDDAKBggrBgEF
# BQcDAzAdBgNVHQ4EFgQUiiRmqvMsEtwO1OymgkvMRaFb5RMwHwYDVR0jBBgwFoAU
# TfbiffzMnt5vgVO6pt0YsBmAg2AwgcUGA1UdHwSBvTCBujCBt6CBtKCBsYaBrmxk
# YXA6Ly8vQ049U1VCQ0EwMSxDTj1zdWJjYTAxLENOPUNEUCxDTj1QdWJsaWMlMjBL
# ZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPWxp
# cHBlLERDPWludHJhP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/YmFzZT9vYmpl
# Y3RDbGFzcz1jUkxEaXN0cmlidXRpb25Qb2ludDCBuQYIKwYBBQUHAQEEgawwgakw
# gaYGCCsGAQUFBzAChoGZbGRhcDovLy9DTj1TVUJDQTAxLENOPUFJQSxDTj1QdWJs
# aWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9u
# LERDPWxpcHBlLERDPWludHJhP2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFz
# cz1jZXJ0aWZpY2F0aW9uQXV0aG9yaXR5MDQGA1UdEQQtMCugKQYKKwYBBAGCNxQC
# A6AbDBlNRDE0QGtsaW5pa3VtLmxpcHBlLmludHJhME0GCSsGAQQBgjcZAgRAMD6g
# PAYKKwYBBAGCNxkCAaAuBCxTLTEtNS0yMS0xMzg5NTE5ODA1LTYxNDI3MDU4LTMx
# MjU1MjExOC0yMzQ1MzANBgkqhkiG9w0BAQwFAAOCAQEAjp69PsL/tUzljz0StkQU
# LIcwJezpYriVl7QC0+fEA8NVsuq/HaE+pIIuNf1pB03iMYCTjEiCDSx1FC2l5uym
# vauC+4WWmFyuS0MCIb9E97fdh3KuxTFp/TUY2BliarXgSzTBJekjB2CsL5/LY5tF
# FK9al1Df+s+TadxjmKDqC/PFsiPXZTqDzmVpTiY4ru7WSo3HkAEcLrLWfJ1DS3Kq
# 6FqDQVJJJ2refQM8DhHfYFxPRW4zyjwWJOlTqXYWKLAwxBumTqkIKhhRO79X9W3o
# l/TuuiD4yOjW6fAppHVWgyGMcfCmfL01IYaWL6reM573o2dTwF7K34g05J+KYMkf
# 2DGCAcowggHGAgEBMCkwEjEQMA4GA1UEAxMHU1VCQ0EwMQITEQAABKYCgfvNVcfX
# WgAAAAAEpjAJBgUrDgMCGgUAoHgwGAYKKwYBBAGCNwIBDDEKMAigAoAAoQKAADAZ
# BgkqhkiG9w0BCQMxDAYKKwYBBAGCNwIBBDAcBgorBgEEAYI3AgELMQ4wDAYKKwYB
# BAGCNwIBFTAjBgkqhkiG9w0BCQQxFgQUtuwRrX+1kKMKf6QHLZlCPTrfk7AwDQYJ
# KoZIhvcNAQEBBQAEggEAdEI4CTM9qp9Q6MwucLXrTxB3a2KTToT5taxpDJfZFaPF
# ZeNmkBdC1a9Fp/WXmB0lfn2siP9cXeVVqlAYe/PIJFhNqOg9p7QjJlcDTTUxFavN
# HcBqdU8UBXGJp4En/Zp+ucxHGwtoUUylUt/oi/XBYwKJ80/5ETGPXWMEnRMM0H+y
# b5+L0f5H5dWV95J4Bzpd0uCLfa3mZp9IEXFG7WDQ4dRBJ8IX0RiMFkWPoetkcQvs
# awMzSzS2NFg0D1nnCYg16jRUpMQSOKKb3UtnTLQcqiv4+TH5LKrV+mF39pcZ5GF8
# w7f+SB9gASVPvjUHbMugg3qT6I0BGDtEHKGUlmzzhw==
# SIG # End signature block
